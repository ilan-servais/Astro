---
import Layout from '@layouts/Layout.astro';
import { getCollection } from 'astro:content';
import HorizontalProjectCard from '@components/HorizontalProjectCard.astro';
import ProjectModal from '@components/ui/ProjectModal.astro';
import BackToTop from '@components/ui/BackToTop.astro';

// Import project images based on slug
import project1Image from '@assets/images/project-1.svg';
import project2Image from '@assets/images/project-2.svg';
import project3Image from '@assets/images/project-3.svg';

// Get all projects
const projects = await getCollection('projects', ({ data }) => !data.inProgress);

// Helper function to get the appropriate image
function getProjectImage(slug) {
  if (slug === 'project-1') return project1Image;
  if (slug === 'project-2') return project2Image;
  if (slug === 'project-3') return project3Image;
  return project1Image; // Default fallback
}

// Interface simplifiée pour typer les détails du projet (sans code)
interface ProjectDetail {
  videoUrl: string;
  hasVideo?: boolean;
}

// Placeholder content for more detailed project info - suppression du codeSnippet
const projectDetails: Record<string, ProjectDetail> = {
  'project-1': {
    videoUrl: "",
    hasVideo: true
  },
  'project-2': {
    videoUrl: "",
    hasVideo: true
  },
  'project-3': {
    videoUrl: "",
    hasVideo: true
  }
};
---

<Layout title="Projects | Ilan Servais">
  <main class="mx-auto max-w-4xl px-4">
    <div class="text-center py-8">
      <h1 class="font-monospace text-3xl text-orange mb-6">All Projects</h1>
      <p class="text-black dark:text-white max-w-2xl mx-auto mb-10">
        From React applications to full-stack solutions.
        Click on any project to view more details.
      </p>
    </div>

    <div class="space-y-6 pb-20">
      {projects.map((project) => {
        const projectImage = getProjectImage(project.slug);
        const projectDetail = projectDetails[project.slug] || {
          videoUrl: "",
          hasVideo: true
        };
        
        return (
          <div>
            <HorizontalProjectCard
              id={project.slug}
              title={project.data.title}
              description={project.data.description}
              image={projectImage}
              imageAlt={project.data.img_alt || `Image for ${project.data.title}`}
              tags={project.data.tags}
              date={project.data.date}
              hasVideo={true}
            />
            
            <ProjectModal
              id={project.slug}
              title={project.data.title}
              description={project.data.description}
              image={projectImage}
              tags={project.data.tags}
              link={project.data.link}
              date={project.data.date}
              videoUrl={projectDetail.videoUrl || undefined}
              hasVideo={true}
            />
          </div>
        );
      })}
    </div>
    
    <div class="fixed bottom-5 right-5 z-40">
      <BackToTop />
    </div>
  </main>
</Layout>

<script>
  // Amélioration du gestionnaire de clics pour éviter de déclencher le modal quand on clique sur le bouton de détails
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.project-card').forEach(card => {
      card.addEventListener('click', (e) => {
        // Ignore clicks on buttons/links with their own handlers
        const target = e.target as Element;
        const modalTrigger = target.closest('[data-modal-trigger]');
        const detailsLink = target.closest('a[href^="/project/"]');
        
        if (modalTrigger || detailsLink) {
          return;
        }
        
        const projectId = card.getAttribute('data-project-id');
        if (projectId) {
          const modalButton = card.querySelector(`[data-modal-target="modal-${projectId}"]`) as HTMLElement;
          
          if (modalButton) {
            modalButton.click();
          }
        }
      });
    });
  });
</script>
