---
import Layout from '@layouts/Layout.astro';
import TimelineExperience from '@components/TimelineExperience.astro';
import timelineData from '../data/timeline.json';
import BackToTop from '@components/ui/BackToTop.astro';

// Tri des expériences par année du plus récent au plus ancien
const sortedExperiences = [...timelineData.experiences].sort((a, b) => {
  const extractYear = (yearStr) => {
    if (typeof yearStr === 'string') {
      const match = yearStr.match(/^\d{4}/);
      return match ? parseInt(match[0]) : 0;
    }
    return yearStr;
  };
  
  return extractYear(b.year) - extractYear(a.year);
});
---

<Layout title="Ilan Servais | Professional Career">
  <main class="mx-auto max-w-4xl px-4">
    <div class="text-center py-8">
      <h1 class="font-monospace text-3xl text-orange mb-6">My Career Path</h1>
    </div>

    <div class="space-y-12 pb-20">
      {sortedExperiences.map((exp) => (
        <div id={exp.id.toString()} class="card-container group relative" data-exp-id={exp.id}>
          <TimelineExperience 
            id={exp.id}
            year={exp.year}
            company={exp.company}
            title={exp.title}
            description={exp.description}
            iconPath={exp.iconPath}
            city={exp.city}
          />
        </div>
      ))}
    </div>
    
    <div class="fixed bottom-5 right-5 z-50">
      <BackToTop />
    </div>
  </main>
</Layout>

<script>
  // Handle hash navigation and card clicks
  document.addEventListener('DOMContentLoaded', () => {
    // Gestion du hash dans l'URL
    if (window.location.hash) {
      const id = window.location.hash.substring(1);
      activateCard(id);
    }
    
    // Ajouter des écouteurs de clic sur toutes les cartes
    const cards = document.querySelectorAll('.card-container');
    cards.forEach(card => {
      card.addEventListener('click', () => {
        const id = card.getAttribute('data-exp-id');
        activateCard(id);
        
        // Mettre à jour l'URL sans recharger la page pour permettre le partage
        history.pushState(null, '', `#${id}`);
      });
    });
    
    // Fonction pour activer une carte spécifique
    function activateCard(id) {
      // Supprimer la classe active de toutes les cartes
      document.querySelectorAll('.card-container').forEach(card => {
        card.classList.remove('active');
      });
      
      // Ajouter la classe active à la carte cliquée
      const element = document.getElementById(id);
      if (element) {
        element.classList.add('active');
        setTimeout(() => {
          element.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }, 300);
      }
    }
  });
</script>

<style>
  .card-container {
    transition: all 0.3s ease;
    scroll-margin-top: 4rem;
    cursor: pointer; /* Indique que la carte est cliquable */
  }
  
  .card-container:hover {
    transform: translateX(5px);
  }
  
  .card-container.active {
    border-left: 4px solid #E06330;
    padding-left: 1rem;
  }
  
  /* Style pour la notification de copie */
  .copy-notification {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: #333;
    color: white;
    padding: 10px 20px;
    border-radius: 4px;
    z-index: 1000;
    animation: fadeInOut 2s ease;
  }
  
  @keyframes fadeInOut {
    0% { opacity: 0; }
    20% { opacity: 1; }
    80% { opacity: 1; }
    100% { opacity: 0; }
  }
</style>
