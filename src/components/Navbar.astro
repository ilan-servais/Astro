---
import Button from '@components/ui/Button.astro';
import ToggleTheme from '@components/ui/ToggleTheme.astro';
import { Astronav, MenuIcon, MenuItems } from 'astro-navbar';

// Obtenir le chemin actuel de la page
const currentPath = Astro.url.pathname;
const isHomePage = currentPath === '/' || currentPath === '';
const isCareerPage = currentPath.includes('/career');
const isProjectsPage = currentPath.includes('/projects') || currentPath.includes('/project/');
const isGamePage = currentPath.includes('/memory-game');
const isRobotPage = currentPath.includes('/robot');

// Adapter les liens en fonction de la page actuelle
const menuitems = [
	{
		title: 'Home',
		path: '/',
		showOnlyOnNonHome: true,
		hideOnHome: true
	},
	{
		title: 'About',
		path: isHomePage ? '#about' : '/#about',
	},
	{
		title: 'Projects',
		path: '/projects',
	},
	{
		title: 'Career',
		path: '/career',
	},
	{
		title: 'Game',
		path: '/memory-game',
	},
	{
		title: '3D',
		path: '/robot',
	},
	{
		title: 'Contact',
		path: isHomePage ? '#contact' : '/#contact',
	},
];

// Filtrer les éléments à afficher
const filteredItems = menuitems.filter(item => {
	if (!isHomePage && item.hideOnHome) return true;
	if (isHomePage && item.showOnlyOnNonHome) return false;
	return true;
});
---

<header data-testId="header" class="flex flex-col items-center justify-between lg:flex-row">
	<Astronav>
		<div class="flex w-full items-center justify-between lg:w-auto">
			<a href="/CV.pdf" target="_blank" rel="noopener noreferrer">
				<Button size={'sm'} name="Download CV">Download CV</Button>
			</a>
			<div class="block lg:hidden">
				<MenuIcon class="h-4 w-4 text-black dark:text-white" />
			</div>
		</div>
		<MenuItems class="mt-2 hidden w-full lg:mt-0 lg:flex lg:w-auto">
			<ul class="flex flex-col lg:flex-row lg:gap-3">
				{
					filteredItems.map((item) => (
						<li>
							<a
								aria-label="navigation link"
								href={item.path}
								class={`flex py-2 text-black hover:text-orange dark:text-white dark:hover:text-orange lg:px-3 
								       ${(isProjectsPage && item.title === 'Projects') || 
                                         (isCareerPage && item.title === 'Career') ||
                                         (isGamePage && item.title === 'Game') ? 
                                         'text-orange dark:text-orange' : ''}`}
							>
								{item.title}
							</a>
						</li>
					))
				}
				<li><ToggleTheme /></li>
			</ul>
		</MenuItems>
	</Astronav>
</header>

<style>
	/* Style pour le bouton Download CV */
	:global(header a button) {
		font-weight: 500;
		letter-spacing: 0.025em;
	}
	
	/* Assure l'espacement correct pour le menu */
	ul {
		display: flex;
		flex-direction: column;
		align-items: center;
	}
	
	@media (min-width: 1024px) {
		ul {
			flex-direction: row;
			gap: 0.75rem;
		}
	}
</style>
