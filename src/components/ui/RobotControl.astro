---
// RobotControl.astro - Interface pour contrôler le robot 3D
---

<div class="robot-control fixed top-4 right-4 z-50 w-64 rounded-xl bg-white dark:bg-gray-800 shadow-lg p-4" x-data="{
  activeTab: 'animations',
  animationState: 'Walking',
  expressions: {
    Angry: 0,
    Surprised: 0,
    Sad: 0,
    Happy: 0,
    Relaxed: 0
  },
  toggleTab(tab) {
    this.activeTab = tab;
  },
  changeAnimation(animation) {
    this.animationState = animation;
    // La fonction fadeToAction sera appelée depuis le code three.js
    if (window.fadeToAction) {
      window.fadeToAction(animation, 0.5);
    }
  },
  updateExpression(expression, value) {
    this.expressions[expression] = value;
    // Mise à jour des morph targets depuis le code three.js
    if (window.updateMorphTarget) {
      window.updateMorphTarget(expression, value);
    }
  }
}">
  <div class="flex justify-between items-center mb-4">
    <h3 class="font-bold text-gray-900 dark:text-white">Robot Control</h3>
    <div class="flex space-x-1">
      <button 
        @click="toggleTab('animations')" 
        :class="activeTab === 'animations' ? 'bg-orange-500 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'"
        class="px-3 py-1 rounded-lg text-sm font-medium transition-colors duration-200">
        Animations
      </button>
      <button 
        @click="toggleTab('expressions')" 
        :class="activeTab === 'expressions' ? 'bg-orange-500 text-white' : 'bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300'"
        class="px-3 py-1 rounded-lg text-sm font-medium transition-colors duration-200">
        Visage
      </button>
    </div>
  </div>

  <!-- Panel des animations -->
  <div x-show="activeTab === 'animations'" x-transition class="space-y-2">
    <div class="w-full">
      <label for="animation-select" class="block mb-1 text-sm font-medium text-gray-900 dark:text-gray-300">
        Animation
      </label>
      <div class="relative">
        <select
          id="animation-select"
          x-model="animationState"
          @change="changeAnimation($event.target.value)"
          class="block w-full rounded-lg bg-gray-100 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-white py-2 pl-3 pr-10 text-sm focus:outline-none focus:ring-2 focus:ring-orange-500">
          <option value="Idle">Idle</option>
          <option value="Walking">Walking</option>
          <option value="Running">Running</option>
          <option value="Dance">Dance</option>
          <option value="Death">Death</option>
          <option value="Sitting">Sitting</option>
          <option value="Standing">Standing</option>
        </select>
        <div class="absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none">
          <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
          </svg>
        </div>
      </div>
    </div>

    <div class="space-y-2">
      <h4 class="text-sm font-medium text-gray-900 dark:text-gray-300">Actions</h4>
      <div class="flex flex-wrap gap-1">
        <button 
          @click="changeAnimation('Jump')"
          class="bg-orange-500 hover:bg-orange-600 text-white text-xs px-2 py-1 rounded-md transition-colors">
          Jump
        </button>
        <button 
          @click="changeAnimation('Yes')"
          class="bg-orange-500 hover:bg-orange-600 text-white text-xs px-2 py-1 rounded-md transition-colors">
          Yes
        </button>
        <button 
          @click="changeAnimation('No')"
          class="bg-orange-500 hover:bg-orange-600 text-white text-xs px-2 py-1 rounded-md transition-colors">
          No
        </button>
        <button 
          @click="changeAnimation('Wave')"
          class="bg-orange-500 hover:bg-orange-600 text-white text-xs px-2 py-1 rounded-md transition-colors">
          Wave
        </button>
        <button 
          @click="changeAnimation('Punch')"
          class="bg-orange-500 hover:bg-orange-600 text-white text-xs px-2 py-1 rounded-md transition-colors">
          Punch
        </button>
        <button 
          @click="changeAnimation('ThumbsUp')"
          class="bg-orange-500 hover:bg-orange-600 text-white text-xs px-2 py-1 rounded-md transition-colors">
          Thumbs Up
        </button>
      </div>
    </div>
  </div>

  <!-- Panel des expressions faciales -->
  <div x-show="activeTab === 'expressions'" x-transition class="space-y-3">
    <div class="space-y-2">
      <div>
        <label for="expression-angry" class="flex justify-between text-xs font-medium text-gray-900 dark:text-gray-300">
          <span>Angry</span>
          <span x-text="Math.round(expressions.Angry * 100) + '%'"></span>
        </label>
        <input 
          id="expression-angry"
          type="range" 
          min="0" 
          max="1" 
          step="0.01"
          x-model="expressions.Angry"
          @input="updateExpression('Angry', $event.target.value)"
          class="w-full h-2 rounded-lg appearance-none cursor-pointer bg-gray-200 dark:bg-gray-700">
      </div>
      
      <div>
        <label for="expression-surprised" class="flex justify-between text-xs font-medium text-gray-900 dark:text-gray-300">
          <span>Surprised</span>
          <span x-text="Math.round(expressions.Surprised * 100) + '%'"></span>
        </label>
        <input 
          id="expression-surprised"
          type="range" 
          min="0" 
          max="1" 
          step="0.01"
          x-model="expressions.Surprised"
          @input="updateExpression('Surprised', $event.target.value)"
          class="w-full h-2 rounded-lg appearance-none cursor-pointer bg-gray-200 dark:bg-gray-700">
      </div>
      
      <div>
        <label for="expression-sad" class="flex justify-between text-xs font-medium text-gray-900 dark:text-gray-300">
          <span>Sad</span>
          <span x-text="Math.round(expressions.Sad * 100) + '%'"></span>
        </label>
        <input 
          id="expression-sad"
          type="range" 
          min="0" 
          max="1" 
          step="0.01"
          x-model="expressions.Sad"
          @input="updateExpression('Sad', $event.target.value)"
          class="w-full h-2 rounded-lg appearance-none cursor-pointer bg-gray-200 dark:bg-gray-700">
      </div>
      
      <div>
        <label for="expression-happy" class="flex justify-between text-xs font-medium text-gray-900 dark:text-gray-300">
          <span>Happy</span>
          <span x-text="Math.round(expressions.Happy * 100) + '%'"></span>
        </label>
        <input 
          id="expression-happy"
          type="range" 
          min="0" 
          max="1" 
          step="0.01"
          x-model="expressions.Happy"
          @input="updateExpression('Happy', $event.target.value)"
          class="w-full h-2 rounded-lg appearance-none cursor-pointer bg-gray-200 dark:bg-gray-700">
      </div>
      
      <div>
        <label for="expression-relaxed" class="flex justify-between text-xs font-medium text-gray-900 dark:text-gray-300">
          <span>Relaxed</span>
          <span x-text="Math.round(expressions.Relaxed * 100) + '%'"></span>
        </label>
        <input 
          id="expression-relaxed"
          type="range" 
          min="0" 
          max="1" 
          step="0.01"
          x-model="expressions.Relaxed"
          @input="updateExpression('Relaxed', $event.target.value)"
          class="w-full h-2 rounded-lg appearance-none cursor-pointer bg-gray-200 dark:bg-gray-700">
      </div>
    </div>
  </div>
</div>
